Kiterjeszthető hasító index (vagy másképp kiterjeszthető tördelőtáblázat)
---------------------
A kosártömb mérete mindig pontosan 2**i.
Tegyük fel, hogy egy blokkba 2 rekord fér el, j értéke (a blokkok jobb oldalán) azt jelzi, 
hogy hány bit használatos a blokkhoz tartozás eldöntésére.

i=1
    ----       0001
0   | -|--->   ----1 
    |  | 
1   | -|--->   1001 
    ----       1100 
               ----1 
 
  kosártömb    blokkok

Szúrjuk be az alábbi hasító értékkel rendelkező sorokat egymás után, és minden 
újabb blokk létrehozása után rajzoljuk újra a kosártömböt és a blokkokat. 

0011, 0110, 1011, 0111, 1110, 1111, 0100


i=1            0011
    ----       0001
0   | -|--->   ----1 
    |  | 
1   | -|--->   1001 
    ----       1100 
               ----1 
 


i=2            0011
    ----       0001
00  | -|--->   ----2  0110
01  | -|----->        ----2
10  | -|---\   1001    
11  | -|---/   1100
    ----       ----1
                


i=2            0011
    ----       0001   0111
00  | -|--->   ----2  0110   1011
01  | -|----->        ----2  1001   1110
10  | -|------->             ----2  1100 
11  | -|--------->                  ----2
    ----                



i=3            
    ----       0011   
000 | -|---\   0001     
001 | -|---/   ----2  0100   0111 
010 | -|----->        ----3  0110    
011 | -|------->             ----3  1011 
100 | -|---\                        1001  
101 | -|---/                        ----2  1100   1110
110 | -|--------->                         ----3  1111
111 | -|----------->                              ----3
    ----


Egy kis segítség:
----------------

A K kulcsú rekordot h(K) első i bitje alapján helyezzük el úgy, hogy követjük 
a kosártömb ezen bejegyzéséhez tartozó mutatót.
Ha nincs hely a megtalált blokkban akkor a következőt tesszük:
1. Ha j < i akkor újabb blokkot hozunk létre és a j+1-edik bit alapján kettéosztjuk a 
   rekordokat a két blokk között (mindkét blokkra j+1 lesz az új érték), majd 
   a kosártömb szükséges mutatóit az új blokkra irányítjuk.
2. Ha j = i akkor először i-t növeljük 1-gyel, megduplázzuk a kosártömböt, új mutatókat
   teszünk bele, majd alkalmazzuk 1.-et.




Lineáris hasító index
---------------------
Tegyük fel, hogy egy blokkba 2 rekord fér el és a kosarak az alábbi rekordokat tartalmazzák:

0000   0101
1110   
____   ____   
 0      1    

Az előre megadott küszöbszám (rekordok száma/kosarak száma) legyen 2,4.
Jelenleg m = 1 (a legnagyobb használt kosárindex)

Szúrjuk be az alábbi hasító értékkel rendelkező sorokat egymás után, és minden 
újabb kosár megnyitás után rajzoljuk újra a kosarakat. 

0001, 0110, 1011, 0111, 1100, 1111, 0100



0000   0101
1110   0001
____   ____   
 0      1  

       0111
       1011
       ----
       0101   1110 
0000   0001   0110
____   ____   ____   
 00     01     10

                     1111
                     ----
1100   0101   1110   1011
0000   0001   0110   0111
____   ____   ____   ____   
 00     01     10     11 


                     1111
                     ----
       0101   1110   1011   0100
0000   0001   0110   0111   1100
____   ____   ____   ____   ____   
 000    001    010    011    100


Egy kis segítség:
----------------

Ha n kosarunk van, akkor a K kulcsú rekordot h(K) utolsó i bitje alapján tesszük a 
megfelelő kosárba (i=log2n, illetve annak felső egész része). 
Ha nincs benne hely, akkor újabb blokkot láncolunk ehhez a kosárhoz.
Ha nincs ilyen kosár, akkor az első bitben különböző kosárba tesszük.
Ha az előre megadott küszöböt átléptük, akkor új kosarat nyitunk.
Szükség esetén növeljük i-t


